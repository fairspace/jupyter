# Default values for vre.
# This is a YAML-formatted file.

# The fairspace container images are in a private repository
# See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# on how to store and specify the credentials for it
imagePullSecrets: {}

# Set specific workspace name. Defaults to release name
# Please note that if this is set, also set it for pluto in `pluto.workspace.name`
nameOverride:

# Hyperspace that this workspace is connected to
# Please note that pluto also has to know about the
# keycloak baseUrl and realm, see the pluto configuration
hyperspace:
    tls: true
    domain:
    locationOverrides:
        keycloak:

    # TODO: determine better way to handle keycloak credentials
    # Keycloak credentials are needed to setup the workspace (e.g. users, clients)
    # in keycloak. Please note that this is not a sustainable way of doing, due
    # to the sensitive nature of these parameters
    #
    # We could either:
    # - have the hyperspace setup keycloak itself, when creating a new workspace
    # - use temporary credentials for setting up these users
    # - ...
    keycloak:
        username:
        password:
        loginRealm: master
        realm:
        clientSecret:

# Setup ingress for workspace components
ingress:
    enabled: true
    domain:
    annotations:
      jupyter:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-body-size: 10g
    tls:
        enabled: true
        secretNameOverride:
        certificate:
            obtain: true
            issuerRef:
                name: letsencrypt-prod
                kind: ClusterIssuer
            dns01Provider: clouddns

#####################################################################
# Specific settings for JupyterHub subchart
#####################################################################
jupyterhub:
  auth:
    type: custom
    custom:
      className: oauthenticator.openid.OpenIDConnectOAuthenticator
      config:
        enable_auth_state: True
        client_id:
        client_secret:
        openid_url:
        session_url:
    scopes:
      - offline_access
  singleuser:
    image:
      name: eu.gcr.io/fairspace-207108/jupyterhub-singleuser
      tag: RELEASEVERSION
    defaultUrl: "/lab"
    extraEnv:
      WORKSPACE_URL:
    cpu:
      limit: 0.5
      guarantee: 0.1
    memory:
      limit: 1G
  hub:
    image:
      name: eu.gcr.io/fairspace-207108/jupyterhub-hub
      tag: RELEASEVERSION
    ingress:
      enabled: false
    extraEnv:
      JUPYTERHUB_CRYPT_KEY:
    extraConfig:
      customConfig: |
        c.KubeSpawner.cmd = ['/start']
        c.KubeSpawner.singleuser_privileged = True
        c.Authenticator.auto_login = True
    # Requests values are set in Jupyterhub chart.
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
  proxy:
    chp:
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
        limits:
          cpu: 200m
          memory: 512Mi
    # The JupyterHub chart requires this value to be set here with the same
    # length as the actual values
    # Ensure to override this value with a 64-character hex string when installing
    secretToken: "0000000000000000000000000000000000000000000000000000000000000000"
  scheduling:
    userScheduler:
      enabled: false
      pdb:
        enabled: false
    podPriority:
      enabled: false
    userPlaceholder:
      enabled: false

# Pod annotations should remain empty. They are filled within the build process
podAnnotations: {}
