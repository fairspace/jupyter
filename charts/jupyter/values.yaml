# Default values for jupyter-fairspace.
# This is a YAML-formatted file.

# The fairspace container images are in a private repository
# See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# on how to store and specify the credentials for it
imagePullSecrets: {}

keycloak:
  baseUrl:
  loginRealm:
  realm:
  username:
  password:

# Scripts for configuring keycloak to accept jupyter connections
configurationScripts:
  keycloak:
    enabled: true
    image: eu.gcr.io/fairspace-207108/keycloak-configuration:0.1.3
    pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "50m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "2048Mi"

# Setup ingress for workspace components
ingress:
    enabled: true
    domain:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 10g
    tls:
        enabled: true
        secretNameOverride:
        certificate:
            obtain: true
            issuerRef:
                name: letsencrypt-prod
                kind: ClusterIssuer

#####################################################################
# Specific settings for JupyterHub subchart
#####################################################################
jupyterhub:
  auth:
    type: custom
    custom:
      className: oauthenticator.fairspace.FairspaceOAuthenticator
      config:
        enable_auth_state: True
        username_key: preferred_username
        extra_params:
          scope: offline_access
        client_id:
        client_secret:
        token_url:
        userdata_url:
    scopes:
      - offline_access
  singleuser:
    image:
      name: eu.gcr.io/fairspace-207108/jupyterhub-singleuser
      tag: RELEASEVERSION
    defaultUrl: "/lab"
    extraEnv:
      TARGET_URL:
    cpu:
      limit: 0.5
      guarantee: 0.1
    memory:
      limit: 1G
  hub:
    image:
      name: eu.gcr.io/fairspace-207108/jupyterhub-hub
      tag: RELEASEVERSION
    ingress:
      enabled: false
    extraEnv:
      JUPYTERHUB_CRYPT_KEY:
    extraConfig:
      customConfig: |
        c.KubeSpawner.cmd = ['/start']
        c.KubeSpawner.privileged = True
        c.Authenticator.auto_login = True
    # Requests values are set in Jupyterhub chart.
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
  proxy:
    chp:
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
        limits:
          cpu: 200m
          memory: 512Mi
    # The JupyterHub chart requires this value to be set here with the same
    # length as the actual values
    # Ensure to override this value with a 64-character hex string when installing
    secretToken: "0000000000000000000000000000000000000000000000000000000000000000"
  scheduling:
    userScheduler:
      enabled: false
      pdb:
        enabled: false
    podPriority:
      enabled: false
    userPlaceholder:
      enabled: false

# Pod annotations should remain empty. They are filled within the build process
podAnnotations: {}
